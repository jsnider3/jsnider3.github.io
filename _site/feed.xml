<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>(\x -&gt; &quot;Blog&quot;)</title>
    <description>An attempt at a blog by someone who thinks Haskell is cool.</description>
    <link>http://jsnider3.github.io/</link>
    <atom:link href="http://jsnider3.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>What does the title mean anyway?</title>
        <description>&lt;p&gt;There’s a short answer and a long answer to that question.
The short answer is that &lt;code&gt;(\x -&amp;gt; &quot;Blog&quot;)&lt;/code&gt; defines an anonymous function
in Haskell that takes a simple argument of arbitrary type, ignores it, 
and returns “Blog”.&lt;/p&gt;

&lt;p&gt;The long way to define this function would be as:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Blog&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For those unfamiliar with Haskell’s lazy evaluation, this function has
a strange feature. Calling &lt;code&gt;foo&lt;/code&gt; with  an &lt;code&gt;a&lt;/code&gt; designed to crash, such as
&lt;code&gt;foo undefined&lt;/code&gt; or &lt;code&gt;foo (error &quot;DIE!&quot;)&lt;/code&gt; will run perfectly fine.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Mar 2015 21:17:54 -0400</pubDate>
        <link>http://jsnider3.github.io/update/haskell/2015/03/28/what-does-the-title-mean-anyway/</link>
        <guid isPermaLink="true">http://jsnider3.github.io/update/haskell/2015/03/28/what-does-the-title-mean-anyway/</guid>
      </item>
    
  </channel>
</rss>
